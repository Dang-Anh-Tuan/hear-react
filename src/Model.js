/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, Reflector } from '@react-three/drei'

const material = new THREE.MeshPhysicalMaterial({
  color: new THREE.Color('#bb86a1').convertSRGBToLinear(),
  roughness: 0,
  clearcoat: 1,
  clearcoatRoughness: 0,
})

export default function Model(props) {
  const group = useRef()
  const { nodes } = useGLTF('/love.glb')

  return (
    <group ref={group} {...props} dispose={null}>
      <Reflector
        resolution={1024}
        receiveShadow
        mirror={0}
        blur={[500, 100]}
        mixBlur={1}
        mixStrength={0.5}
        depthScale={1}
        minDepthThreshold={0.8}
        maxDepthThreshold={1}
        position={[0, 0, 8]}
        scale={[2, 2, 1]}
        rotation={[-Math.PI / 2, 0, Math.PI]}
        args={[70, 70]}>
        {(Material, props) => <Material metalness={0.25} color="#eea6b1" roughness={1} {...props} />}
      </Reflector>
      <mesh receiveShadow castShadow material={material} geometry={nodes.H.geometry} position={[2.5, 0.17, 1.78]}
            scale={[6, 6, 6]}
            rotation={[1.58, 0.028, 3.5]}
      />
      <mesh receiveShadow castShadow material={material} geometry={nodes.L.geometry} position={[-10, 0.26, -4]}
            scale={[6,6,6]}
            rotation={[1.59, 0, 4.0]}
      />
      <mesh
        receiveShadow
        castShadow
        material={material}
        geometry={nodes.Heart.geometry}
        position={[-6, 0.5, -1.5]}
        scale={[0.5, 0.5, 0.5]}
        rotation={[-0, 2.8, -0]}
      />
    </group>
  )
}

useGLTF.preload('/pink-d.glb')
